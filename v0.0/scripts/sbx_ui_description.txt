.images/ScriptBox_003.png
		Script Box is a plugin for 3ds Max that generates a dynamic menu for any folder containging MaxScript files.
		For each instance of macroScripts, plugin, utilty and regular scripts it creates a seperate execute button.
		This enables users to organize there collection of MaxScripts without installation and customization procedures within 3ds Max.<br>
		Youtube - Gumroad - Scriptspot

		Create dynamic menus and run MaxScripts with a simple, customizable interface
		Organize your script collection in any way you like without installation and UI changes within 3ds Max

	.images/ScriptBox_v11_001.png 300
	Main Features
		- Dynamic dialog menu 
		- Execute MaxScripts from any folder
		- Organized by macroScript, plugin, utility and regular scripts
		- Multi-threaded file loading
		- Dock, resize, and collapse dialogs
		- Configure buttons and minimize UI
		- Custom tooltips with aditional information
	Support
		- 3ds Max 2021 - 2025
		- .ms, .mse, .mcr files
		- macroScript, plugin and utility classes
TOC

User Interface #ui #center
	.images/UI_DialogOptions_003.png 300
	Top Menu #ui_topmenu
		Installer: Open the Script Box installer
		Options: Open Script Box Options menu
		DockLeft: Dock the dialog to the left side
		Float/Window: Toggle the dialog between floating and docked modes
		DockRight: Dock the dialog menu to the right side
		Help Documentation: Go to gitHub main page
		Close: Close Script Box

	.images/UI_Options_001.png
	Options #ui_options
		Interface Controls: Select which buttons are available in the UI.
			- archive script
			- create new script
			- folder path
			- open folder in explorer
			- open script in script editor
		Script Box: general script options
			- launch on startup
		Tooltip Info: Select tooltip information for the script Launch Button
			- errors
			- filepath
			- macroscript info
			- plugin info
			- script name
			- scriptbox tooltip
			- utility info

	./images/UI_Folders_002.png 300
	Script Folders #ui_scriptfolders
		New Folder: Select a new folder 
			Creates a menu for all MaxScripts in the selected folder
			Removes all menus from previously loaded folders in the Folders List
		Add Folder: Select a folder to add it to existing folders
			Adds a menu for all MaxScripts within the selected folder
			Re-loads all other menus for the folders in the Folders List
		Include Sub-Folders: Include sub-folder hierarchy for the currently selected folder
			Sub-folder named '_archive will be exluded
			Places all scripts from the folder hierarchy into one menu
			Re-loads all menus for the folders in the Folders List
		Remove Sub-Folders: Exclude sub-folder hierarchy for the currently selected folder
			Re-loads all menus for the folders in the Folders List
		Remove Folder: Remove currently selected folder from Folders List
			Re-load all menus from the remaining folders in the Folder List
		Reload all Folders: Re-load all menus from folders in the Folder list
			When editing the code of a script, you do not need to re-load for the changes to be included
			When editing macroscript, plugin or utility information you do need to re-load for the changes to be included
			When editing sbx_tooltip you do need to re-load for the changes to be included
		Folder List: All folders currently loaded in Script Box
			Select a folder to Include/Remove Sub-Folders or Remove Folder

	.images/UI_ScriptMenu_003.png 300
	Script Menu #ui_scriptmenu
		This dialog is created when any MaxScripts are found within a selected folder.<br>
		All collected script files are scanned for macroScripts, plugins and utility classes. Each instance of these classes gets a Launch Button that executes only that part of the script. The Launch Buttons are grouped according to these script classes. If no class instance can be found, the script is loaded as regular MaxScript and receives a single Launh Button.<br>
		When 2 MaxScripts have the same name, but a different version numbers, only the highest version file will be loaded.
		<br></br>
		Open Folder: Opens the script folder in Windows Explorer
			Can be hidden in Options > Interface Controls > open folder in explorer
		Create New Script: Opens a menu to create a new MaxScript file, inside the script folder
			Type the name of the script and ScriptBox will create a .ms file
			You can create .ms or .mcr files by including the filetype in the name
			Will Re-load all menus and folders in Folder List
			Will open the new MaxScript in the Scripting Editor
			Can be hidden in Options > Interface Controls > create new script
		Folder Path: Full folder path
			Read-only
			Can be hidden in Options > Interface Controls > folder path
		Open Script: Opens the script file in the Scripting Editor
			Can be hidden in Options > Interface Controls > open script in editor
		Archive Script: Move the MaxScript file to a sub-folder named '_archive'
			Will Re-load Script Box and remove the script from the menu
			If the sub-folder '_archive' does not exist Script Box will created it in the folder where the MaxScript file is located
			Can be hidden in Options > Interface Controls > archive script
		Launch Button: Execute the script

Tooltips #tt #center
	.images/UI_Tooltip_001.png 300
		Script Box provides users with additional tooltip information for any launch script
		- Script name, class and category
		- File name and type
		- MacroScript tooltip<br><br>
		Since version 1.1, you can customize the tooltip information for all Launch Buttons in 2 ways
		- In Top Menu > Options, select what information items are displayed
		- Enable 'scriptbox tooltip' in Options and add a custom line of code to your script class

	.images/UI_Options_001.png 180
	Options #tt_options
		The following tooltip information items are available
		errors: list any errors detected while loading the script
		filepath: filepath of the script file
		macroscript info: name, category, tooltip of the macroScript
		plugin info: name and class of plugin
		script name: name of macroScript, plugin, utility or script file name
		scriptbox tooltip: custom tooltip text (see Tooltips section)
		utility info: name of utility<br>

	Custom tooltip #tt_code
		When 'scriptbox tooltip' is active in the Options menu, you can add a custom tooltip to any supported script class.
		The required code to have this work looks as follows
		- ```(local sbx_tooltip = ("Custom tooltip text"))```
	
	.images/Code_SBX_Tooltip_001.png 400
	How to write a custom tooltip #tt_howto
		There are 3 conditions for Script Box to regonize a custom tooltip
		- Define a local variabel called ```local sbx_tooltip = ```
		- Have the local variabel be the first line of code and inside brackets of the script class
		- The value for the variabel has to be a string and has to be inside brackets ```("Custom tooltip")```
		<br>
		In the screenshot you can see an examples of valid sbx_tooltips for every supported script class
		line 1: Regular script tooltip 
			```(local sbx_tooltip = ("Custom script tooltip for Script Box"))```
		line 8: Plugin tooltip
			```(local sbx_tooltip = ("Custom plugin tooltip for Script Box"))```
		line 28: MacroScript tooltip
			```(local sbx_tooltip = ("Custom macroscript tooltip for Script Box"))```
		line 35: Uility tooltip
			```(local sbx_tooltip = ("Custom utility tooltip for Script Box"))```

Versions #versions #center
	1.002 #versions_1002
		:feature list
			- multi-thread file loading
			- dockable and resizable interface
			- build dynamic menus from folder scripts
			- add/remove/include sub- folders
			- ignore '_archive' folders
			- open folder in explorer
			- execute macroscript, plugins and utilties without installation
			- group scripts by macroscript, plugin, utility and regular scripts
			- extended tooltip information (filename, script type, class and category)
			- custom tooltip information
			- warning messages for bad scripts and unknown errors
			- help documentation
	1.100 #versions_1100
		:feature list
			- launch script on startup
			- customize UI controls
			- customize tooltip information
			- create new script
			- archive scripts
			- improved and smaller UI
			- save fold status of dialogs
			- error feedback on bad arguments in tooltips